{"version":3,"sources":["component/Home.js","component/Display.js","component/Product.js","component/NewProduct.js","component/Navigation.js","component/EditProduct.js","container/ProdManageParent.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","react_default","a","createElement","className","Display","src","data","url","alt","name","price","react_router_dom","to","concat","id","onClick","deleteitem","Product","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchproducts","axios","get","then","response","setState","productData","catch","error","console","log","post","status","state","_this2","map","item","index","component_Display","React","Component","NewProduct","handleChange","event","defineProperty","target","value","formSubmit","preventDefault","title","redirectPage","react_router","onSubmit","htmlFor","onChange","type","Navigation","EditProduct","updateProduct","put","match","params","pageRedirect","deleteProduct","e","ProdManageParent","component_Navigation","exact","from","path","component","App","container_ProdManageParent","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9ae8613.chunk.js","sourcesContent":["import React from 'react';\nimport \"../styles/component.css\";\n\nconst Home = (props) => {\n  return (\n    <div className=\"bodyclass\">\n      <h1>Home Page</h1>\n      <p>Welcome to the Project Product Management. Here we can manage a <br></br>\n        set of products. You are able to create new products, remove old <br></br>\n        products, and edit products.</p>\n    </div>\n\n  );\n\n}\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/display.css';\n//child - Display Parent -Product\nconst Display = (props) => {\n  //console.log(props.data);\n  return (\n    <div className=\"displayclass\">\n      <img className=\"imgclass\" src={props.data.url} alt=\"handbag\" />\n      <label className=\"displaylabel\">{props.data.name}</label>\n      <label className=\"displaylabel\">${props.data.price}</label>\n      <Link className=\"astyle\" to={`/products/edit/${props.data.id}`}><button className=\"displaybtnedit\">EDIT</button></Link>\n      <button className=\"displaybtndelete\" onClick={() => { props.deleteitem(props.data.id) }}>Delete</button>\n    </div>\n\n  );\n\n}\nexport default Display;","import React from 'react';\nimport axios from 'axios';\nimport \"../styles/component.css\";\nimport Display from './Display';\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productData: [],\n\n    }\n\n  };\n\n\n  fetchproducts = () => {\n    axios.get('/fetchproducts')\n      .then((response) => {\n        //console.log(response);\n        this.setState({ productData: response.data });\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  componentDidMount() {\n    // fetch data from Server \n    this.fetchproducts();\n  }\n\n  deleteitem = (id) => {\n    //console.log(id);\n    axios.post(`/deleteproduct/${id}`)\n      .then((response) => {\n        //console.log(response);\n        if (response.data.status === \"success\") {\n          this.fetchproducts();\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"bodyclass\" >\n        <h1>Products List</h1>\n        {this.state.productData\n          ? (this.state.productData.map((item, index) => {\n            return <Display data={item} deleteitem={this.deleteitem} />\n\n          }))\n          : null\n\n        }\n      </div >\n\n    );\n\n  }\n\n}\nexport default Product;","import React from 'react';\nimport \"../styles/component.css\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n// generic component for new product and to edit existing product information\nclass NewProduct extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      price: '',\n      url: '',\n      redirectPage: false,\n    };\n\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    //axios call to server to store the new product info\n    axios.post('/postproductdata', {\n      name: this.state.title,\n      price: this.state.price,\n      url: this.state.url,\n    })\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          //redirect to Product List page\n          this.setState({ redirectPage: true });\n\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  redirectPage = () => {\n    if (this.state.redirectPage) {\n      return <Redirect to=\"/products\" />\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"bodyclass\">\n        {this.redirectPage()}\n        <h1>Create a new Product</h1>\n        <form onSubmit={this.formSubmit}>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"title\">Title</label>\n            <input className=\"inputcomponent\" id=\"title\" name=\"title\" onChange={this.handleChange} value={this.state.title} />\n          </div>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"price\">Price</label>\n            <input className=\"inputcomponent\" id=\"price\" name=\"price\" onChange={this.handleChange} value={this.state.price} />\n          </div>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"url\">Image url</label>\n            <input className=\"inputcomponent\" id=\"url\" name=\"url\" onChange={this.handleChange} value={this.state.url} />\n          </div>\n          <button className=\"btn\" type=\"submit\">Create</button>\n        </form>\n      </div>\n    );\n  }\n\n}\nexport default NewProduct;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/navigation.css';\n\nconst Navigation = (props) => {\n  return (\n    <div id=\"navheader\">\n      <ul id=\"linkstyle\">\n        <li className=\"listyle\"><Link to=\"/home\">Home</Link></li>\n        <li className=\"listyle\"><Link to=\"/products\">Product List</Link></li>\n        <li className=\"listyle\"><Link to=\"/products/new\">Product Creation</Link></li>\n      </ul>\n    </div >\n  );\n\n}\nexport default Navigation;","import React from 'react';\nimport \"../styles/component.css\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n// generic component for new product and to edit existing product information\nclass EditProduct extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      price: '',\n      url: '',\n      pageRedirect: false,\n    };\n\n  };\n  componentDidMount() {\n    console.log(\"componentdid mount\");\n    axios.get(`/fetchproducts/${this.props.match.params.id}`)\n      .then((response) => {\n        this.setState({ title: response.data.name, price: response.data.price, url: response.data.url });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  updateProduct = () => {\n    axios.put(`/updateproduct/${this.props.match.params.id}`, {\n      name: this.state.title,\n      price: this.state.price,\n      url: this.state.url,\n    })\n      .then((response) => {\n        //console.log(response);\n        if (response.data.status === \"success\") {\n          this.setState({ pageRedirect: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  deleteProduct = () => {\n    //delete this product\n    axios.post(`/deleteproduct/${this.props.match.params.id}`)\n      .then((response) => {\n        //console.log(response);\n        if (response.data.status === \"success\") {\n          this.setState({ pageRedirect: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  // page redirect\n  redirectPage = () => {\n    if (this.state.pageRedirect) {\n      return <Redirect to=\"/products\" />\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"bodyclass\">\n        {this.redirectPage()}\n        <h1>Create a new Product</h1>\n        <form onSubmit={this.formSubmit}>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"title\">Title</label>\n            <input className=\"inputcomponent\" id=\"title\" name=\"title\" onChange={this.handleChange} value={this.state.title} />\n          </div>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"price\">Price</label>\n            <input className=\"inputcomponent\" id=\"price\" name=\"price\" onChange={this.handleChange} value={this.state.price} />\n          </div>\n          <div className=\"datacomponent\">\n            <label className=\"componentlabel\" htmlFor=\"url\">Image url</label>\n            <input className=\"inputcomponent\" id=\"url\" name=\"url\" onChange={this.handleChange} value={this.state.url} />\n          </div>\n          <button className=\"btn\" type=\"submit\" onClick={this.deleteProduct}>Delete</button>\n          <button className=\"btn\" type=\"submit\" onClick={this.updateProduct}>Update</button>\n        </form>\n      </div>\n    );\n  }\n\n}\nexport default EditProduct;","import React from 'react';\nimport 'react-router';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport '../styles/prodmanageparent.css';\nimport Home from '../component/Home';\nimport Product from '../component/Product';\nimport NewProduct from '../component/NewProduct';\nimport Navigation from '../component/Navigation';\nimport EditProduct from '../component/EditProduct';\n\n\n\nclass ProdManageParent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div id=\"prodmanage\">\n          {/* Routing and Nav bar  */}\n          <h1>PPM - Project Product Management</h1>\n          <Navigation />\n          <Switch>\n            <Redirect exact from='/' to='/home' />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/products/new\" component={NewProduct} />\n            <Route path=\"/products/edit/:id\" component={EditProduct} />\n            <Route path=\"/products\" component={Product} />\n          </Switch>\n        </div>\n\n      </BrowserRouter>\n    );\n  }\n\n}\nexport default ProdManageParent;","import React, { Component } from 'react';\nimport ProdManageParent from './container/ProdManageParent';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* call the parent container */}\n        <ProdManageParent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}